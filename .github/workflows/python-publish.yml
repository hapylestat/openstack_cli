name: Python package

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build

    strategy:
      matrix:
        runs-on: [ubuntu-latest]
        python-version: [3.8]

    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # Install pip and pytest
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          pip install setuptools wheel twine

      - name: Build wheel for the python ${{ matrix.python-version }}
        run: |
          python setup.py sdist bdist_wheel --dist-dir=dist/${{ matrix.python-version }}

      - name: Upload wheel for python ${{ matrix.python-version }}
        uses: actions/upload-artifact@v2
        with:
          name: openstack_cli_${{ matrix.python-version }}
          path: dist/${{ matrix.python-version }}/*.whl
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

      - name: Delete previous release
        uses: ame-yu/action-delete-latest-release@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create new release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: latest
          release_name: Release ${{ github.ref }}
          body: |
            Updates from the latest commit ${{ github.ref }}
          draft: false
          prerelease: true

      - name: Upload Release Assets
        uses: AButler/upload-release-assets@v2.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: latest
          files: dist/${{ matrix.python-version }}/*.whl
